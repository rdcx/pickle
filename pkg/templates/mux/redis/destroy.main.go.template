package main

import (
	"context"
	"log"
	"net/http"
	
	"github.com/gorilla/mux"
	"github.com/go-redis/redis/v9"
)

type {{ .Model.Name }} struct {
	ID string `json:"id"`
	{{ range .Model.Fields }}
	{{ .Name }} {{ .Type }} `json:"{{ .Name | lower }}"`{{ end }}
}

var ctx = context.Background()
var rdb = redis.NewClient(&redis.Options{
	Addr:     "{{ .Redis.Host }}:{{ .Redis.Port }}",
	Password: "{{ .Redis.Password }}", // no password set
	DB:       {{ .Redis.DB }},  // use default DB
})


func Function(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json")
	err := rdb.Del(ctx, "{{ .Model.Name | lower }}:" + r.URL.Query().Get("id")).Err()
    if err != nil {
        w.WriteHeader(http.StatusNotFound)
    }
	w.WriteHeader(http.StatusOK)
}

func main() {

	r := mux.NewRouter()
	r.HandleFunc("/", Function)

	log.Fatal(http.ListenAndServe(":80", r))
}
