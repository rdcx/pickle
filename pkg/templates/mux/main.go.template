package main

import (
	{{ if .HasRedis }} "context" {{ end }}
	"encoding/json"
	"log"
	"net/http"

	"github.com/gorilla/mux"

	{{ if .HasRedis }} "github.com/go-redis/redis/v9" {{ end }}
)

{{ if .HasRedis }}
var ctx = context.Background()
var rdb = redis.NewClient(&redis.Options{
	Addr:     "{{ .Redis.Host }}:{{ .Redis.Port }}",
	Password: "{{ .Redis.Password }}", // no password set
	DB:       0,  // use default DB
})
{{ end }}

func Function(w http.ResponseWriter, r *http.Request) {
	{{ if and (.HasRedis) (eq .Action "show") }}
	val, err := rdb.Get(ctx, r.URL.Query().Get("id")).Result()
	if err == redis.Nil {
		w.WriteHeader(http.StatusNotFound)
	} else if err != nil {
		log.Fatal(err)
	} else {
		json.NewEncoder(w).Encode(val)
	}
	{{ else }}

	json.NewEncoder(w).Encode("Hello world")

	{{ end }}
}

func main() {

	r := mux.NewRouter()
	r.HandleFunc("/", Function).Methods("GET")

	log.Fatal(http.ListenAndServe(":80", r))
}
